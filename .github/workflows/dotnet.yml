name: Build Templates

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Pack
      run: dotnet pack src/Microsoft.Maui.Templates.MauiMultiHeadApp
    - name: Upload
      uses: actions/upload-artifact@v3.1.3
      with:
        name: nuget
        path: src/Microsoft.Maui.Templates.MauiMultiHeadApp/bin/Release/*.nupkg

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        net: [ '7.0', '8.0' ]
        os: [ macos-13, windows-latest ]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.net }}.x
    - name: Setup .NET Workloads
      run: dotnet workload install maui
    - name: Download
      uses: actions/download-artifact@v2.1.1
      id: download
      with:
        name: nuget
        path: nuget
    - name: Install
      run: dotnet new install ${{steps.download.outputs.download-path}}/*.nupkg
    - name: Create
      run: dotnet new maui-multihead -o TestMauiApp -f net${{ matrix.net }}
    - name: Build Android
      run: dotnet build TestMauiApp/TestMauiApp.Droid/TestMauiApp.Droid.csproj
    - name: Build iOS
      run: dotnet build TestMauiApp/TestMauiApp.iOS/TestMauiApp.iOS.csproj
    - name: Build macOS (Mac Catalyst)
      run: dotnet build TestMauiApp/TestMauiApp.Mac/TestMauiApp.Mac.csproj
    - name: Build Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: dotnet build TestMauiApp/TestMauiApp.WinUI/TestMauiApp.WinUI.csproj -p:Platform=x64
